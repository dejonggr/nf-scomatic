// params
params {
  samplesheet = null
  celltypes = null
  location = "irods"
  modality = "GEX"
  genome = null
  pons = null
  editing = null
  bed = null
  subset_bed = null
  mutations = null
  publish_celltype_bams = false
  ignore_base_quality = false
  max_nM = null
  max_NH = null
  min_MQ = 255
  n_trim = 0
  min_dp = 5
  min_cc = 5
  min_bq = 20
  max_dp = 8000
  min_af = 0
  min_ac = 0
  max_cell_types = 1
  out_dir = './'
}

// environments
singularity.autoMounts = true
singularity.enabled = true
process {
  container = 'docker://vofford/scomatic:latest'
}

// use nf-schema for param handling
plugins {
  id 'nf-schema@2.2.0'
}

// help message
validation {
  help {
    enabled = true
  }
}

// profiles
profiles {
  GRCh38 {
    includeConfig "config/GRCh38.config"
  }
  pacbio {
    params.ignore_base_quality = true
    params.min_MQ = 60
  }
}

// resource labels
process {
  errorStrategy = { task.exitStatus in [9,104,130,134,137,138,139,140,143] ? 'retry' : 'terminate' }
  maxRetries = 6
  withLabel: normal {
      queue = "normal"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: normal4core {
      queue = "normal"
      cpus = 4
      memory = { 2.GB * task.attempt }
  }
  withLabel: normal10gb {
      queue = "normal"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: normal100gb {
      queue = "normal"
      cpus = 1
      memory = { 100.GB * task.attempt }
  }
  withLabel: week10gb {
      queue = "week"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: week50gb {
      queue = "week"
      cpus = 1
      memory = { 50.GB * task.attempt }
  }
  withLabel: week100gb {
      queue = "week"
      cpus = 1
      memory = { 100.GB * task.attempt }
  }
  withLabel: long {
      queue = "long"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: long16core {
      queue = "long"
      cpus = 16
      memory = { 2.GB * task.attempt }
  }
  withLabel: long10gb {
      queue = "long"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: long16core10gb {
      queue = "long"
      cpus = 16
      memory = { 10.GB * task.attempt }
      scratch = true
  }
  withLabel: long20gb {
      queue = "long"
      cpus = 1
      memory = { 20.GB * task.attempt }
  }
  withLabel: long16core64gb {
      queue = "long"
      cpus = 16
      memory = { 64.GB * task.attempt }
      scratch = true
  }
  withLabel: long16core100gb {
      queue = "long"
      cpus = 16
      memory = { 64.GB * task.attempt }
      scratch = true
  }
  withLabel: week {
      queue = "week"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: week16core10gb {
      queue = "week"
      cpus = 16
      memory = { 10.GB * task.attempt }
  }
  withLabel: normal16core20gb {
      queue = "normal"
      cpus = 16
      memory = { 20.GB * task.attempt }
  }
  withLabel: normal20gb {
      queue = "normal"
      cpus = 1
      memory = { 20.GB * task.attempt }
  }
  withLabel: normal4core20gb {
    queue = "normal"
    cpus = 4
    memory = { 20.GB * task.attempt }
  }
  withLabel: normal50gb {
      queue = "normal"
      cpus = 1
      memory = { 50.GB * task.attempt }
  }
  withLabel: basement50gb {
    queue = "basement"
    cpus = 1
    memory = { 50.GB * task.attempt }
  }
}